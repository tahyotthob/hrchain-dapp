{"ast":null,"code":"import EventEmitter from \"eventemitter3\";\nimport WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"@walletconnect/qrcode-modal\";\nimport { IJsonRpcConnection } from \"@walletconnect/jsonrpc-types\";\nimport { formatJsonRpcError } from \"@walletconnect/jsonrpc-utils\";\nexport class SignerConnection extends IJsonRpcConnection {\n  constructor(opts) {\n    super();\n    this.events = new EventEmitter();\n    this.accounts = [];\n    this.chainId = 1;\n    this.pending = false;\n    this.bridge = \"https://bridge.walletconnect.org\";\n    this.qrcode = true;\n    this.qrcodeModalOptions = undefined;\n    this.opts = opts;\n    this.chainId = (opts === null || opts === void 0 ? void 0 : opts.chainId) || this.chainId;\n    this.wc = this.register(opts);\n  }\n  get connected() {\n    return typeof this.wc !== \"undefined\" && this.wc.connected;\n  }\n  get connecting() {\n    return this.pending;\n  }\n  get connector() {\n    this.wc = this.register(this.opts);\n    return this.wc;\n  }\n  on(event, listener) {\n    this.events.on(event, listener);\n  }\n  once(event, listener) {\n    this.events.once(event, listener);\n  }\n  off(event, listener) {\n    this.events.off(event, listener);\n  }\n  removeListener(event, listener) {\n    this.events.removeListener(event, listener);\n  }\n  async open(chainId) {\n    if (this.connected) {\n      this.onOpen();\n      return;\n    }\n    return new Promise((resolve, reject) => {\n      this.on(\"error\", err => {\n        reject(err);\n      });\n      this.on(\"open\", () => {\n        resolve();\n      });\n      this.create(chainId);\n    });\n  }\n  async close() {\n    if (typeof this.wc === \"undefined\") return;\n    if (this.wc.connected) {\n      this.wc.killSession();\n    }\n    this.onClose();\n  }\n  async send(payload) {\n    this.wc = this.register(this.opts);\n    if (!this.connected) await this.open();\n    this.sendPayload(payload).then(res => this.events.emit(\"payload\", res)).catch(e => this.events.emit(\"payload\", formatJsonRpcError(payload.id, e.message)));\n  }\n  register(opts) {\n    if (this.wc) return this.wc;\n    this.opts = opts || this.opts;\n    this.bridge = (opts === null || opts === void 0 ? void 0 : opts.connector) ? opts.connector.bridge : (opts === null || opts === void 0 ? void 0 : opts.bridge) || \"https://bridge.walletconnect.org\";\n    this.qrcode = typeof (opts === null || opts === void 0 ? void 0 : opts.qrcode) === \"undefined\" || opts.qrcode !== false;\n    this.chainId = typeof (opts === null || opts === void 0 ? void 0 : opts.chainId) !== \"undefined\" ? opts.chainId : this.chainId;\n    this.qrcodeModalOptions = opts === null || opts === void 0 ? void 0 : opts.qrcodeModalOptions;\n    const connectorOpts = {\n      bridge: this.bridge,\n      qrcodeModal: this.qrcode ? QRCodeModal : undefined,\n      qrcodeModalOptions: this.qrcodeModalOptions,\n      storageId: opts === null || opts === void 0 ? void 0 : opts.storageId,\n      signingMethods: opts === null || opts === void 0 ? void 0 : opts.signingMethods,\n      clientMeta: opts === null || opts === void 0 ? void 0 : opts.clientMeta\n    };\n    this.wc = typeof (opts === null || opts === void 0 ? void 0 : opts.connector) !== \"undefined\" ? opts.connector : new WalletConnect(connectorOpts);\n    if (typeof this.wc === \"undefined\") {\n      throw new Error(\"Failed to register WalletConnect connector\");\n    }\n    if (this.wc.accounts.length) {\n      this.accounts = this.wc.accounts;\n    }\n    if (this.wc.chainId) {\n      this.chainId = this.wc.chainId;\n    }\n    this.registerConnectorEvents();\n    return this.wc;\n  }\n  onOpen(wc) {\n    this.pending = false;\n    if (wc) {\n      this.wc = wc;\n    }\n    this.events.emit(\"open\");\n  }\n  onClose() {\n    this.pending = false;\n    if (this.wc) {\n      this.wc = undefined;\n    }\n    this.events.emit(\"close\");\n  }\n  onError(payload, message = \"Failed or Rejected Request\", code = -32000, data) {\n    const errorPayload = {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      error: {\n        code,\n        message\n      }\n    };\n    if (typeof data !== \"undefined\") {\n      errorPayload.error.data = data;\n    }\n    this.events.emit(\"payload\", errorPayload);\n    return errorPayload;\n  }\n  create(chainId) {\n    this.wc = this.register(this.opts);\n    this.chainId = chainId || this.chainId;\n    if (this.connected || this.pending) return;\n    this.pending = true;\n    this.registerConnectorEvents();\n    this.wc.createSession({\n      chainId: this.chainId\n    }).then(() => this.events.emit(\"created\")).catch(e => this.events.emit(\"error\", e));\n  }\n  registerConnectorEvents() {\n    this.wc = this.register(this.opts);\n    this.wc.on(\"connect\", err => {\n      var _a, _b;\n      if (err) {\n        this.events.emit(\"error\", err);\n        return;\n      }\n      this.accounts = ((_a = this.wc) === null || _a === void 0 ? void 0 : _a.accounts) || [];\n      this.chainId = ((_b = this.wc) === null || _b === void 0 ? void 0 : _b.chainId) || this.chainId;\n      this.onOpen();\n    });\n    this.wc.on(\"disconnect\", err => {\n      if (err) {\n        this.events.emit(\"error\", err);\n        return;\n      }\n      this.onClose();\n    });\n    this.wc.on(\"modal_closed\", () => {\n      this.events.emit(\"error\", new Error(\"User closed modal\"));\n    });\n    this.wc.on(\"session_update\", (error, payload) => {\n      const {\n        accounts,\n        chainId\n      } = payload.params[0];\n      if (!this.accounts || accounts && this.accounts !== accounts) {\n        this.accounts = accounts;\n        this.events.emit(\"accountsChanged\", accounts);\n      }\n      if (!this.chainId || chainId && this.chainId !== chainId) {\n        this.chainId = chainId;\n        this.events.emit(\"chainChanged\", chainId);\n      }\n    });\n  }\n  async sendPayload(payload) {\n    this.wc = this.register(this.opts);\n    try {\n      const response = await this.wc.unsafeSend(payload);\n      return this.sanitizeResponse(response);\n    } catch (error) {\n      return this.onError(payload, error.message);\n    }\n  }\n  sanitizeResponse(response) {\n    return typeof response.error !== \"undefined\" && typeof response.error.code === \"undefined\" ? formatJsonRpcError(response.id, response.error.message, response.error.data) : response;\n  }\n}\nexport default SignerConnection;","map":{"version":3,"names":["EventEmitter","WalletConnect","QRCodeModal","IJsonRpcConnection","formatJsonRpcError","SignerConnection","constructor","opts","events","accounts","chainId","pending","bridge","qrcode","qrcodeModalOptions","undefined","wc","register","connected","connecting","connector","on","event","listener","once","off","removeListener","open","onOpen","Promise","resolve","reject","err","create","close","killSession","onClose","send","payload","sendPayload","then","res","emit","catch","e","id","message","connectorOpts","qrcodeModal","storageId","signingMethods","clientMeta","Error","length","registerConnectorEvents","onError","code","data","errorPayload","jsonrpc","error","createSession","_a","_b","params","response","unsafeSend","sanitizeResponse"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}